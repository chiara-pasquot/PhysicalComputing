//**************************************************************
#include <Servo.h>

float min_x = 5;
float max_x = 355;
float min_y = 5;
float max_y = 90;
float min_z = 5;
float max_z = 90;
int min_freeze = 200;
int max_freeze = 3000;
float minimal_movement = 5;

int random_delay;
float x_position = min_x + (max_x - min_x)/2;
float y_position = min_y + (max_y - min_y)/2;
float z_position = min_z + (max_z - min_z)/2;
float x_old_position = x_position;
float y_old_position = y_position;
float z_old_position = z_position;
float x_new_position;
float y_new_position;
float z_new_position;
float x_speed;
float y_speed;
float z_speed;
int movement_time;

Servo x_servo;  
Servo y_servo;
Servo z_servo;
int pos = 0;

const int LIGHT_PIN = A0; // Pin connected to voltage divider output
const int LED_PIN = 13; // Use built-in LED as dark indicator
const float VCC = 4.98; // Measured voltage of Ardunio 5V line
const float R_DIV = 4660.0; // Measured resistance of 3.3k resistor

// Set this to the minimum resistance require to turn an LED on:
const float DARK_THRESHOLD = 10000.0;

void setup() 
{
  z_servo.attach(11);  // attaches the z servo on pin 11 to the servo object
  y_servo.attach(6);  // attaches the y servo on pin 6 to the servo object
  x_servo.attach(9);  // attaches the x servo on pin 9 to the servo object
  
  
  //Place the servos in the center at the beginning 
  z_servo.write(z_position);
  y_servo.write(y_position); 
  x_servo.write(x_position);
  
  Serial.begin(9600);
  pinMode(LIGHT_PIN, INPUT);
  pinMode(LED_PIN, OUTPUT);
}

void loop() 
{
  // Read the ADC, and calculate voltage and resistance from it
  int lightADC = analogRead(LIGHT_PIN);
  if (lightADC > 0){
   
    // Use the ADC reading to calculate voltage and resistance
    float lightV = lightADC * VCC / 1023.0;
    float lightR = R_DIV * (VCC / lightV - 1.0);
    Serial.println("Voltage: " + String(lightV) + " V");
    Serial.println("Resistance: " + String(lightR) + " ohms");

    // If resistance of photocell is greater than the dark
    // threshold setting, turn the LED on.
  if (lightR >= DARK_THRESHOLD){
      digitalWrite(LED_PIN, HIGH);
  		//SERVOS
    	movement_time = random(10,40);
  		random_delay = random(min_freeze, max_freeze);
  		x_new_position = random(min_x+minimal_movement, max_x-minimal_movement);
  		y_new_position = random(min_y+minimal_movement, max_y-minimal_movement);
  		z_new_position = random(min_z+minimal_movement, max_z-minimal_movement);
  
  		if( (z_new_position > z_old_position) && (abs(z_new_position - z_old_position) < 5 )) {
   			z_new_position = z_new_position + minimal_movement;
  		}  else if ( (z_new_position < z_old_position) && (abs(z_new_position - z_old_position) < 5 )) {
    		z_new_position = z_new_position - minimal_movement;
  		}
  
  		if( (y_new_position > y_old_position) && (abs(y_new_position - y_old_position) < 5 )) {
   			y_new_position = y_new_position + minimal_movement;
  		}  else if ( (y_new_position < y_old_position) && (abs(y_new_position - y_old_position) < 5 )) {
    		y_new_position = y_new_position - minimal_movement;
  		}
  
  		if( (x_new_position > x_old_position) && (abs(x_new_position - x_old_position) < 5 )) {
    		x_new_position = x_new_position + minimal_movement;
  		}  else if ( (x_new_position < x_old_position) && (abs(x_new_position - x_old_position) < 5 )) {
    		x_new_position = x_new_position - minimal_movement;
  		}
  
  		x_speed = (x_new_position - x_old_position)/movement_time;
  		y_speed = (y_new_position - y_old_position)/movement_time; 
  		z_speed = (z_new_position - z_old_position)/movement_time;
  		for (pos = 0; pos < movement_time; pos += 1) { 
      		x_position = x_position + x_speed;
      		y_position = y_position + y_speed;
      		z_position = z_position + z_speed;
      		x_servo.write(x_position);  
      		y_servo.write(y_position);  
      		z_servo.write(z_position);
    		delay(10); 
  		}
  		x_old_position = x_new_position;
  		y_old_position = y_new_position;
  		z_old_position = z_new_position;
  		delay(random_delay);
  }else{
      digitalWrite(LED_PIN, LOW);

    Serial.println();
    delay(500);
  }
}
}
